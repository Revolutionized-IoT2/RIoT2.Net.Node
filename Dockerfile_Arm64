
FROM mcr.microsoft.com/dotnet/aspnet:8.0-alpine-arm64v8 AS base
WORKDIR /app
RUN apk add --upgrade --no-cache tzdata
ENV DOTNET_RUNNING_IN_CONTAINER=true
ENV ASPNETCORE_HTTP_PORTS=80
EXPOSE 80

# This stage is used to build the service project
FROM --platform=linux/arm64 mcr.microsoft.com/dotnet/sdk:8.0 AS build
ARG BUILD_CONFIGURATION=Release
ARG NUGET_AUTH_TOKEN=token
ARG NUGET_URL=https://nuget.pkg.github.com/Revolutionized-IoT2/index.json
WORKDIR /src
COPY ["RIoT2.Net.Node.csproj", "."]
RUN dotnet nuget add source -n github -u AZ -p $NUGET_AUTH_TOKEN --store-password-in-clear-text $NUGET_URL
RUN dotnet restore "./RIoT2.Net.Node.csproj" -a arm64
COPY . .
WORKDIR "/src/."
RUN dotnet build "./RIoT2.Net.Node.csproj" -c $BUILD_CONFIGURATION -a arm64 -o /app/build

# This stage is used to publish the service project to be copied to the final stage
FROM build AS publish
ARG BUILD_CONFIGURATION=Release
RUN dotnet publish "./RIoT2.Net.Node.csproj" -c $BUILD_CONFIGURATION -a arm64 -o /app/publish /p:UseAppHost=false

# This stage is used in production or when running from VS in regular mode (Default when not using the Debug configuration)
FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "RIoT2.Net.Node.dll"]

#Set default environment variables
ENV RIOT2_MQTT_IP=192.168.0.30
ENV RIOT2_MQTT_PASSWORD=password
ENV RIOT2_MQTT_USERNAME=user
ENV RIOT2_NODE_ID=F811B5A0-E978-45BB-ADD3-584655DF21BF
ENV RIOT2_NODE_URL=http://192.168.0.34
ENV TZ=Europe/Helsinki